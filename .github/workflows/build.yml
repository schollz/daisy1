name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install clang-format
    - name: arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1
      with:
        release: '9-2019-q4'
    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.11'
    - name: Create and activate a Python virtual environment
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv venv .venv
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH
    - name: Install Python dependencies
      run: uv pip install -r requirements.txt
    - run: uv pip freeze
    - name: Build submodules
      run: |
        git submodule update --init --recursive
        cd libDaisy && make all -j
        cd ../DaisySP && make all -j
    - name: Build ouroboros-audio
      run: |
        make all -j
    - name: Checkout pico-sdk
      uses: actions/checkout@v4.1.7
      with:
        repository: raspberrypi/pico-sdk
        path: pico-sdk
        submodules: true
        ref: 1.5.1
    - name: Patch tinyusb
      run: |
        sed -i 's/OSAL_TIMEOUT_WAIT_FOREVER/OSAL_TIMEOUT_NORMAL/g' $GITHUB_WORKSPACE/pico-sdk/lib/tinyusb/src/tusb.c
        cat $GITHUB_WORKSPACE/pico-sdk/lib/tinyusb/src/tusb.c | grep osal_mutex
    - name: Set PICO_SDK_PATH
      run: echo "PICO_SDK_PATH=$GITHUB_WORKSPACE/pico-sdk" >> $GITHUB_ENV
    - name: Build ouroboros-control
      run:
        cd rp2040 && make -j
